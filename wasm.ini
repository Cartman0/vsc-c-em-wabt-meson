# ref: https://github.com/mesonbuild/meson/blob/master/cross/wasm.txt
#
# we are going to call these the build machine, host machine and target machine. Their definitions are the following:
# - build machine: the computer that is doing the actual compiling. 実際にコンパイルを行うコンピュータのこと
# - host machine: the machine on which the compiled binary will run. コンパイルされたバイナリが実行されるマシン
# - target machine: the machine on which the compiled binary's output will run, only meaningful if the program produces machine-specific output. コンパイルされたバイナリの出力が実行されるマシーンであり、プログラムがマシン固有の出力を生成する場合にのみ意味があります。
#
# The tl/dr summary:
# if you are doing regular cross compilation, you only care about 
# - build_machine and 
# - host_machine. 
#
[binaries]
c = 'emcc'
cpp = 'em++'
ar = 'emar'
wasm = '/wabt/bin/wasm2wat'
wat = '/wabt/bin/wat2wasm'

[built-in options]
c_args = []
# emcc options: https://github.com/emscripten-core/emscripten/blob/main/src/settings.js
# EXPORT_ALL: If true, we export all the symbols that are present in JS onto the Module object.
c_link_args = ['-s','EXPORT_ALL=0']
cpp_args = []
cpp_link_args = ['-s', 'EXPORT_ALL=0']

[properties]
exe_suffix = 'js'
static_library_suffix = 'la'
shared_library_suffix = 'js'
shared_module_suffix = 'js'

[host_machine]
system = 'emscripten'
cpu_family = 'wasm32'
cpu = 'wasm32'
endian = 'little'